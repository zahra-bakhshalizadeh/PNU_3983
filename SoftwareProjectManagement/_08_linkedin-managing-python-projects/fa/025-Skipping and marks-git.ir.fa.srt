
  
 0 
 00:00:00,0 --> 00:00:05,0 
 https://git.ir/ 
  
 1 
 00:00:00,05 --> 00:00:02,09 
 - [مربی] توسعه دهندگان بی تاب هستند ، 
  
 2 
 00:00:02,09 --> 00:00:05,01 
 که به گفته لری وال ، خالق 
  
 3 
 00:00:05,01 --> 00:00:08,06 
 از زبان برنامه نویسی پرل چیز خوبی است. 
  
 4 
 00:00:08,06 --> 00:00:11,06 
 اگر فکر می کنند توسعه دهندگان تست را هر چند وقت یکبار انجام نمی دهند 
  
 5 
 00:00:11,06 --> 00:00:13,06 
 آنها زمان زیادی را می گیرند. 
  
 6 
 00:00:13,06 --> 00:00:16,08 
 همچنین در برخی موارد آزمایشات لازم خواهد بود 
  
 7 
 00:00:16,08 --> 00:00:19,04 
 یک محیط پیچیده که در دسترس نیست 
  
 8 
 00:00:19,04 --> 00:00:21,01 
 در دستگاه توسعه دهنده 
  
 9 
 00:00:21,01 --> 00:00:25,00 
 یک دیتابیس بزرگ ، سخت افزار ویژه و cetera بگویید. 
  
 10 
 00:00:25,00 --> 00:00:28,00 
 برای حل این مشکل ، ما دو روش برای جستجوی تستها داریم 
  
 11 
 00:00:28,00 --> 00:00:31,03 
 در pytest ، جست و خیز و علائم. 
  
 12 
 00:00:31,03 --> 00:00:33,08 
 در اینجا مثالی از چگونگی پرش تست آورده شده است. 
  
 13 
 00:00:33,08 --> 00:00:37,08 
 من قصد دارم بررسی کنم که آیا CI در محیط یافت شده است یا خیر. 
  
 14 
 00:00:37,08 --> 00:00:40,02 
 این یک متغیر محیطی مشترک است که بسیار زیاد است 
  
 15 
 00:00:40,02 --> 00:00:42,07 
 از CI ، سیستم های ادغام مداوم ، 
  
 16 
 00:00:42,07 --> 00:00:45,03 
 قبل از اجرای تست ها تنظیم می شوند 
  
 17 
 00:00:45,03 --> 00:00:50,08 
 و اکنون ، من می توانم Python -m را اجرا کنم 
  
 18 
 00:00:50,08 --> 00:00:56,09 
 pytest -v test_skip. 
  
 19 
 00:00:56,09 --> 00:00:58,09 
 و این آزمون از بین می رود ، 
  
 20 
 00:00:58,09 --> 00:01:02,01 
 زیرا CI در محیط تنظیم نشده است. 
  
 21 
 00:01:02,01 --> 00:01:05,07 
 اگر بخواهم متغیر محیط CI را تنظیم کنم ، 
  
 22 
 00:01:05,07 --> 00:01:13,09 
 CI = ، بیایید بگوییم دایره CI و اکنون ، آزمایش انجام می شود. 
  
 23 
 00:01:13,09 --> 00:01:17,03 
 راه حل دیگر pytest به ما نشان می دهد. 
  
 24 
 00:01:17,03 --> 00:01:19,08 
 می توانید تست ها را علامت گذاری کنید و فقط آزمون را اجرا کنید 
  
 25 
 00:01:19,08 --> 00:01:22,01 
 که با یک مارک مشخص مشخص شده اند. 
  
 26 
 00:01:22,01 --> 00:01:26,02 
 به عنوان مثال ، در اینجا ، تست در هر زمان هیچ علامتی ندارد. 
  
 27 
 00:01:26,02 --> 00:01:30,05 
 اما تست کند دارای علامتی به نام کند است. 
  
 28 
 00:01:30,05 --> 00:01:34,01 
 بنابراین ، اگر من قصد دارم python-p pestest را اجرا کنم 
  
 29 
 00:01:34,01 --> 00:01:40,07 
 - v test_marks ، این دو برنامه را اجرا می کنند. 
  
 30 
 00:01:40,07 --> 00:01:46,00 
 اما می توانم آهسته آهسته بگویم ، 
  
 31 
 00:01:46,00 --> 00:01:48,09 
 و اکنون ، فقط تست آهسته اجرا می شود ، 
  
 32 
 00:01:48,09 --> 00:01:51,05 
 تست که علامت کند دارد. 
  
 33 
 00:01:51,05 --> 00:01:56,04 
 من همچنین می توانم بگویم اجرا کند نیست ، به معنای تمام آزمون است 
  
 34 
 00:01:56,04 --> 00:01:58,04 
 که علامت کند ندارند. 
  
 35 
 00:01:58,04 --> 00:02:02,05 
 در این حالت ، در هر زمان فقط تست را اجرا می کند. 
  
 36 
 00:02:02,05 --> 00:02:05,07 
 ممکن است هشداری درباره علائم ناشناخته مشاهده کنید ، 
  
 37 
 00:02:05,07 --> 00:02:10,06 
 فقط می توانید آن را نادیده بگیرید ، یا از pytest.ini استفاده کنید 
  
 38 
 00:02:10,06 --> 00:02:13,00 
 برای تعیین نشانگرهای سفارشی خود 

