 0 
 00:00:00,0 --> 00:00:05,0 
 https://git.ir/ ترجمه سید علی محترمی
  
 1 
 00:00:00,00 --> 00:00:06,00 
 (موسیقی خوش ذوق) 
  
 2 
 00:00:06,00 --> 00:00:08,01 
 - در اینجا راه حل من برای حل مسئله است 
  
 3 
 00:00:08,01 --> 00:00:10,05 
 مشتری به دنبال این است که من متغیری را به نام "اینجا" تعریف کنم ، 
  
 4 
 00:00:10,05 --> 00:00:11,09 
 که مسیر مطلق است 
  
 5 
 00:00:11,09 --> 00:00:14,07 
 به فهرست پرونده آزمایش فعلی 
  
 6 
 00:00:14,07 --> 00:00:18,08 
 می دانم پرونده پرونده آزمون در کنار این پرونده است. 
  
 7 
 00:00:18,08 --> 00:00:22,08 
 در خط نهم ، تابعی را با عنوان load_cases تعریف می کنم. 
  
 8 
 00:00:22,08 --> 00:00:24,02 
 برای به دست آوردن نام پرونده ، 
  
 9 
 00:00:24,02 --> 00:00:27,06 
 مسیر مطلق نام پرونده را در خط 10 دریافت کنید ، 
  
 10 
 00:00:27,06 --> 00:00:30,03 
 و سپس ، برای هر خط در پرونده ، 
  
 11 
 00:00:30,03 --> 00:00:34,03 
 ما از json برای رمزگشایی خط در یک فرهنگ لغت پایتون استفاده خواهیم کرد ، 
  
 12 
 00:00:34,03 --> 00:00:39,00 
 و مقدار شیء ، خروجی و خطا را به دست می آورید. 
  
 13 
 00:00:39,00 --> 00:00:42,09 
 سپس در خط 18 ، test_sqrt را تعریف می کنم ، 
  
 14 
 00:00:42,09 --> 00:00:45,05 
 که مقدار ، مورد انتظار و خطا را بدست می آورد. 
  
 15 
 00:00:45,05 --> 00:00:47,05 
 و همانطور که می توانید در خط 17 ، 
  
 16 
 00:00:47,05 --> 00:00:51,03 
 این یک تابع پارامتری با این مقادیر است 
  
 17 
 00:00:51,03 --> 00:00:56,00 
 گرفتن موارد آزمون از طریق فراخوانی load_cases از پرونده ما. 
  
 18 
 00:00:56,00 --> 00:00:57,09 
 در کد عملکرد ، در خط 18 ، 
  
 19 
 00:00:57,09 --> 00:00:59,08 
 اگر عملکرد باید خطا کند ، 
  
 20 
 00:00:59,08 --> 00:01:03,09 
 ما با استفاده از مدیر زمینه افزایش می دهد تا بررسی کند. 
  
 21 
 00:01:03,09 --> 00:01:08,04 
 در غیر این صورت ، در خط 24 ، کامپیوتر از مقدار خارج می شود 
  
 22 
 00:01:08,04 --> 00:01:10,02 
 ما از مورد آزمون خودمان ، 
  
 23 
 00:01:10,02 --> 00:01:13,08 
 و در خط 25 ، بررسی کردیم که مقدار مناسب را بدست آورده ایم. 
  
 24 
 00:01:13,08 --> 00:01:17,02 
 باز هم ، پیام های خطا مهم هستند. 
  
 25 
 00:01:17,02 --> 00:01:21,06 
 و اکنون ، تست های python-p pestest -v ، 
  
 26 
 00:01:21,06 --> 00:01:25,00 
 و قرار است تمام پرونده های تست ما از پرونده اجرا شود. 
  
  
