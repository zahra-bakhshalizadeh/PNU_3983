1

00:00:00,06 --> 00:00:03,03
- I'm a huge fan of agile practices



2

00:00:03,03 --> 00:00:05,06

and the empirical process they follow.



3

00:00:05,06 --> 00:00:09,00

In my experience, projects run using this methodology



4

00:00:09,00 --> 00:00:11,01

are very successful.



5

00:00:11,01 --> 00:00:14,09

That being said, I acknowledge it has weaknesses, too.



6

00:00:14,09 --> 00:00:18,00

So let's explore some of those weaknesses.



7

00:00:18,00 --> 00:00:20,03

The first weakness of the empirical process



8

00:00:20,03 --> 00:00:24,09

is the amount of time and high level of commitment expected.



9

00:00:24,09 --> 00:00:27,09

Both the customer and team members need



10

00:00:27,09 --> 00:00:31,08

to collaborate closely on the requirements and design.



11

00:00:31,08 --> 00:00:35,01

Another area of heavy commitment is in the form



12

00:00:35,01 --> 00:00:39,07

of ongoing user acceptance testing throughout every sprint



13

00:00:39,07 --> 00:00:42,01

to get each feature done.



14

00:00:42,01 --> 00:00:44,09

In some ways, this is one of the agile's advantages



15

00:00:44,09 --> 00:00:48,02

because that close collaboration ensure the right thing



16

00:00:48,02 --> 00:00:49,05

is being built.



17

00:00:49,05 --> 00:00:52,09

However, the level of time and effort spent



18

00:00:52,09 --> 00:00:56,04

on the empirical process can be considered a weakness



19

00:00:56,04 --> 00:00:59,06

because it demands more time and more energy



20

00:00:59,06 --> 00:01:02,01

from everyone involved.



21

00:01:02,01 --> 00:01:06,05

Another weakness of this process is its unpredictability.



22

00:01:06,05 --> 00:01:09,03

Remember, agile teams start their project



23

00:01:09,03 --> 00:01:12,00

with a defined end state in mind.



24

00:01:12,00 --> 00:01:14,05

When you're starting a project in this way,



25

00:01:14,05 --> 00:01:17,05

it's much harder to establish in advance



26

00:01:17,05 --> 00:01:20,06

exactly how much time and cost will be needed



27

00:01:20,06 --> 00:01:23,00

to get that exact result.



28

00:01:23,00 --> 00:01:25,02

Once they get started on the project,



29

00:01:25,02 --> 00:01:28,00

agile teams can deliver accurate estimates.



30

00:01:28,00 --> 00:01:31,07

They just can't do it before the work starts.



31

00:01:31,07 --> 00:01:34,09

Another form this unpredictability takes



32

00:01:34,09 --> 00:01:37,08

is in the evolving scope of the effort.



33

00:01:37,08 --> 00:01:41,02

Remember, agile fixes the time and cost



34

00:01:41,02 --> 00:01:43,04

at the beginning of the project.



35

00:01:43,04 --> 00:01:47,04

The scope an agile team delivers is the flex point.



36

00:01:47,04 --> 00:01:50,07

This can make customers highly uncomfortable.



37

00:01:50,07 --> 00:01:53,05

Since the scope is evolving, based on what the team



38

00:01:53,05 --> 00:01:55,04

is learning throughout the project,



39

00:01:55,04 --> 00:01:58,07

the exact set of features that will be delivered



40

00:01:58,07 --> 00:02:01,08

can't be fully predicted at the outset.



41

00:02:01,08 --> 00:02:05,02

Also, since the requirements are emerging,



42

00:02:05,02 --> 00:02:08,09

scope creep is a real risk, especially if there isn't



43

00:02:08,09 --> 00:02:12,08

a very strong or clear vision for the product.



44

00:02:12,08 --> 00:02:15,02

Another area of weakness I hear often



45

00:02:15,02 --> 00:02:18,01

is a lack of design and documentation



46

00:02:18,01 --> 00:02:20,02

coming from agile projects.



47

00:02:20,02 --> 00:02:23,03

Again, since requirements are evolutionary,



48

00:02:23,03 --> 00:02:26,01

so are the designs and documentation.



49

00:02:26,01 --> 00:02:28,07

The downside is that it's easy for the team



50

00:02:28,07 --> 00:02:32,05

to wander off the architectural path without ongoing



51

00:02:32,05 --> 00:02:36,00

touch points with their architectural team members.



52

00:02:36,00 --> 00:02:39,06

Documentation in agile is also lightweight and evolving



53

00:02:39,06 --> 00:02:41,01

throughout the project.



54

00:02:41,01 --> 00:02:44,00

In many cases, requirements are captured



55

00:02:44,00 --> 00:02:47,02

during conversations and may simply be a photograph



56

00:02:47,02 --> 00:02:51,02

of a white board diagram or a set of meeting notes.



57

00:02:51,02 --> 00:02:53,05

The impacts here are the difficulty



58

00:02:53,05 --> 00:02:55,07

of getting new team members up to speed



59

00:02:55,07 --> 00:02:58,05

and archiving the material in such a way



60

00:02:58,05 --> 00:03:01,05

that the project could pass an audit.



61

00:03:01,05 --> 00:03:04,06

While agile has many advantages to bring to the table,



62

00:03:04,06 --> 00:03:07,04

close leadership by the scrum master is needed



63

00:03:07,04 --> 00:03:09,07

to mitigate its weaknesses.



64

00:03:09,07 --> 00:03:11,08

Be sure to remember these weaknesses



65

00:03:11,08 --> 00:03:14,05

so you'll be more prepared to address them.



66

00:03:14,05 --> 00:03:18,03

When you do, your agile will be stronger than ever.


