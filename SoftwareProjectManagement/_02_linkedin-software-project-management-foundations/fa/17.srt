1
00:00:01.000 --> 00:00:03.005
برنامه جدید شما راه اندازی نمی شود

2
00:00:03.005 --> 00:00:05.002
به دنیای خاص خود

3
00:00:05.002 --> 00:00:07.004
منظور من این است که نرم افزار جدید شما

4
00:00:07.004 --> 00:00:10.004
به یک اکوسیستم موجود حرکت خواهد کرد

5
00:00:10.004 --> 00:00:12.009
این یک چالش برای پروژه شما است

6
00:00:12.009 --> 00:00:15.003
شما باید جریان را در نظر بگیرید

7
00:00:15.003 --> 00:00:18.005
زیرساخت های فناوری و مقابله با ادغام

8
00:00:18.005 --> 00:00:21.003
با میراث یا سیستم های موجود

9
00:00:21.003 --> 00:00:23.008
تیم شما یک مکانیزم محبوب دارد

10
00:00:23.008 --> 00:00:25.009
می توانید استفاده کنید تا این چالش را بر عهده بگیرد

11
00:00:25.009 --> 00:00:27.005
آن را دیوپس می نامند

12
00:00:27.005 --> 00:00:29.009
دیوپس مدتی است که

13
00:00:29.009 --> 00:00:33.003
و این از رویکردهای لاغر و چابک در کار بوده است

14
00:00:33.003 --> 00:00:36.000
در حال حاضر ، دیوپس بر همکاری متمرکز شده است

15
00:00:36.000 --> 00:00:40.009
تیم های توسعه ، توسعه و تیم های عملیاتی و دیوپس

16
00:00:40.009 --> 00:00:43.004
هدف همکاری هر دو طرف است

17
00:00:43.004 --> 00:00:46.008
سیستم ، تیم های توسعه اصلی که با آنها کار می کنند

18
00:00:46.008 --> 00:00:49.007
تیم های عملیات یا نگهداری و پشتیبانی

19
00:00:49.007 --> 00:00:53.002
این کار گروهی محصولات خارق العاده ای را ایجاد می کند

20
00:00:53.002 --> 00:00:57.008
از آنجا که توسعه پشتیبانی از زندگی بعد از حیات را در نظر می گیرد

21
00:00:57.008 --> 00:01:01.006
شما فقط به این دلیل که محصولی قوی تر خواهید ساخت

22
00:01:01.006 --> 00:01:06.000
این محصول به گونه ای طراحی شده است که به خوبی با سیستم های میراث همکاری کند

23
00:01:06.000 --> 00:01:09.006
علاوه بر این ، برنامه برای انجام طراحی شده است

24
00:01:09.006 --> 00:01:13.000
در طول عمر نرمال خود

25
00:01:13.000 --> 00:01:14.009
چگونه اون کار را انجام می دهی؟

26
00:01:14.009 --> 00:01:16.007
خوب ، نگه داشتن تیم خود را در زمین

27
00:01:16.007 --> 00:01:20.005
در یک ذهنیت چابک از یادگیری ، آزمایش

28
00:01:20.005 --> 00:01:24.000
و همکاری مکان بسیار خوبی برای شروع است

29
00:01:24.000 --> 00:01:26.009
از آنجا ، شیوه های دیوپس را کشف کنید

30
00:01:26.009 --> 00:01:28.007
و از تمام رویکردهای ممکن استفاده کنید

31
00:01:28.007 --> 00:01:32.002
برای اطمینان از صداقت برنامه شما

32
00:01:32.002 --> 00:01:35.004
یک مثال عالی از یک عمل دیوپس استفاده می کند

33
00:01:35.004 --> 00:01:39.003
ادغام مداوم که در آن از کلیه برنامه نویسان خود کدگذاری می شود

34
00:01:39.003 --> 00:01:42.008
حداقل یک بار در روز با هم ادغام می شوند

35
00:01:42.008 --> 00:01:46.001
این اطمینان می دهد که خطاهای کد نویسی ساخت را خراب نمی کند

36
00:01:46.001 --> 00:01:49.008
و اگر این کار را انجام دهند ، تیم می داند کد آن است

37
00:01:49.008 --> 00:01:52.005
بنابراین آنها می توانند به سرعت آن را تعمیر کنند

38
00:01:52.005 --> 00:01:55.002
اتوماسیون یکی دیگر از ویژگی های بارز دیوپس است

39
00:01:55.002 --> 00:01:57.006
و به خصوص مفید است

40
00:01:57.006 --> 00:02:00.006
می توانید ساخت و آزمایش خود را به صورت خودکار انجام دهید

41
00:02:00.006 --> 00:02:04.001
هنگامی که تست خود را به صورت خودکار انجام می دهید ، اعتبار سنجی آن ساده تر است

42
00:02:04.001 --> 00:02:07.005
ادغام شما با سیستم های میراث

43
00:02:07.005 --> 00:02:11.006
سومین روش دیوپس به صورت خودکار تهیه وضعیت شماست

44
00:02:11.006 --> 00:02:13.007
وقتی تیم توسعه شما باید تأسیس کند

45
00:02:13.007 --> 00:02:16.006
یک محیط جدید ، شاید برای آزمایش کاربر

46
00:02:16.006 --> 00:02:21.002
می تواند این کار را با حداقل پشتیبانی تیم های عملیاتی انجام دهد

47
00:02:21.002 --> 00:02:24.005
استقرار یک برنامه جدید در یک اکوسیستم موجود

48
00:02:24.005 --> 00:02:27.006
مجموعه چالش های خاص خود را ارائه می دهد

49
00:02:27.006 --> 00:02:30.001
استفاده از شیوه های دیوپس می تواند به شما کمک کند

50
00:02:30.001 --> 00:02:33.000
و تیم شما این کار را با کمال میل انجام دهند

