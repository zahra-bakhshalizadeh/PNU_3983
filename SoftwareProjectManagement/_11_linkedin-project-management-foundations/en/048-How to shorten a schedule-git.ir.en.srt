1
00:00:00,640 --> 00:00:05,359
stakeholders can be an impatient bunch

2
00:00:03,840 --> 00:00:07,759
you estimate when the project will

3
00:00:05,359 --> 00:00:10,559
finish and more often than not

4
00:00:07,759 --> 00:00:12,639
they ask if you can deliver it sooner or

5
00:00:10,559 --> 00:00:14,480
maybe your project gets delayed and you

6
00:00:12,639 --> 00:00:16,320
need to make up time

7
00:00:14,480 --> 00:00:19,359
let's look at a few techniques for

8
00:00:16,320 --> 00:00:22,080
shortening the project schedule

9
00:00:19,359 --> 00:00:22,400
fast tracking means you overlap tasks

10
00:00:22,080 --> 00:00:25,519
that

11
00:00:22,400 --> 00:00:27,920
normally occur one after the other

12
00:00:25,519 --> 00:00:28,880
let's say you want to finish design more

13
00:00:27,920 --> 00:00:30,880
quickly

14
00:00:28,880 --> 00:00:33,120
you can have some folks start designing

15
00:00:30,880 --> 00:00:33,680
software features before the system

16
00:00:33,120 --> 00:00:36,960
design

17
00:00:33,680 --> 00:00:39,440
is complete fast tracking is simple

18
00:00:36,960 --> 00:00:42,399
you just add an overlap to two tasks

19
00:00:39,440 --> 00:00:45,039
with finish to start dependencies

20
00:00:42,399 --> 00:00:47,760
the best tasks to fast track are the

21
00:00:45,039 --> 00:00:50,079
longest tasks on the critical path

22
00:00:47,760 --> 00:00:52,399
remember you shorten the whole project

23
00:00:50,079 --> 00:00:54,399
when you shorten the critical path

24
00:00:52,399 --> 00:00:55,600
fast tracking the longest tasks on the

25
00:00:54,399 --> 00:00:57,840
critical path

26
00:00:55,600 --> 00:01:00,640
shortens the schedule and also

27
00:00:57,840 --> 00:01:02,480
introduces the fewest number of risks

28
00:01:00,640 --> 00:01:04,720
and changes

29
00:01:02,480 --> 00:01:06,000
which brings us to the disadvantage of

30
00:01:04,720 --> 00:01:09,600
fast tracking

31
00:01:06,000 --> 00:01:11,680
it increases risk for example

32
00:01:09,600 --> 00:01:12,720
changes to the system design could

33
00:01:11,680 --> 00:01:16,000
result in

34
00:01:12,720 --> 00:01:19,119
redoing work on the software design

35
00:01:16,000 --> 00:01:21,040
the second technique crashing means you

36
00:01:19,119 --> 00:01:22,159
spend additional money to shorten the

37
00:01:21,040 --> 00:01:25,040
schedule

38
00:01:22,159 --> 00:01:27,920
like paying for more people or expedited

39
00:01:25,040 --> 00:01:30,159
delivery of key materials

40
00:01:27,920 --> 00:01:32,799
the critical path is still the place to

41
00:01:30,159 --> 00:01:35,200
look for tasks to crash

42
00:01:32,799 --> 00:01:37,520
think about it why would you spend money

43
00:01:35,200 --> 00:01:39,360
to shorten tasks if they aren't going to

44
00:01:37,520 --> 00:01:41,119
shorten your schedule

45
00:01:39,360 --> 00:01:43,040
you also want the alternative that

46
00:01:41,119 --> 00:01:43,520
shortens the schedule the amount you

47
00:01:43,040 --> 00:01:46,640
need

48
00:01:43,520 --> 00:01:47,360
for the least amount of money start with

49
00:01:46,640 --> 00:01:50,720
the least

50
00:01:47,360 --> 00:01:53,360
expensive tasks to crash and move on to

51
00:01:50,720 --> 00:01:56,560
tasks with higher price tags

52
00:01:53,360 --> 00:01:58,320
remember you crash tasks only until

53
00:01:56,560 --> 00:02:00,479
you've shortened the schedule by the

54
00:01:58,320 --> 00:02:03,360
amount you need

55
00:02:00,479 --> 00:02:05,119
a crash table makes it easy to see which

56
00:02:03,360 --> 00:02:07,920
tasks to crash

57
00:02:05,119 --> 00:02:08,640
it shows the cost to crash each critical

58
00:02:07,920 --> 00:02:10,720
task

59
00:02:08,640 --> 00:02:12,160
and the duration you eliminate by

60
00:02:10,720 --> 00:02:14,800
crashing them

61
00:02:12,160 --> 00:02:15,280
choose the tasks with the lowest crash

62
00:02:14,800 --> 00:02:18,000
cost

63
00:02:15,280 --> 00:02:18,959
per week if they have the same crash

64
00:02:18,000 --> 00:02:22,080
cost per week

65
00:02:18,959 --> 00:02:24,800
crash the longer ones first that way you

66
00:02:22,080 --> 00:02:28,480
crash the fewest tasks

67
00:02:24,800 --> 00:02:30,959
you can take crashing only so far

68
00:02:28,480 --> 00:02:32,560
at some point adding more people won't

69
00:02:30,959 --> 00:02:34,239
shorten the duration

70
00:02:32,560 --> 00:02:38,000
because people start getting in each

71
00:02:34,239 --> 00:02:40,480
other's way and on each other's nerves

72
00:02:38,000 --> 00:02:42,000
new people take time to get up to speed

73
00:02:40,480 --> 00:02:44,400
and they can slow down

74
00:02:42,000 --> 00:02:46,560
existing team members who have to help

75
00:02:44,400 --> 00:02:49,200
them get oriented

76
00:02:46,560 --> 00:02:49,680
keep in mind you review the critical

77
00:02:49,200 --> 00:02:53,280
path

78
00:02:49,680 --> 00:02:55,760
after every adjustment an adjustment

79
00:02:53,280 --> 00:02:56,640
could change the critical path you want

80
00:02:55,760 --> 00:03:01,200
to make sure

81
00:02:56,640 --> 00:03:02,800
the next task you work on is still on it

82
00:03:01,200 --> 00:03:04,319
the third method for shortening a

83
00:03:02,800 --> 00:03:07,360
schedule is to cut

84
00:03:04,319 --> 00:03:09,440
project scope if the tasks for deleted

85
00:03:07,360 --> 00:03:12,640
scope are on the critical path

86
00:03:09,440 --> 00:03:15,680
cutting scope shortens the schedule

87
00:03:12,640 --> 00:03:18,480
fast tracking crashing and cutting scope

88
00:03:15,680 --> 00:03:20,319
help shorten the project schedule each

89
00:03:18,480 --> 00:03:22,640
has its pros and cons

90
00:03:20,319 --> 00:03:25,120
so choose the method that makes the most

91
00:03:22,640 --> 00:03:26,879
sense for the project at hand

92
00:03:25,120 --> 00:03:30,000
look at the schedule in the exercise

93
00:03:26,879 --> 00:03:31,760
files what techniques would you use to

94
00:03:30,000 --> 00:03:37,200
shorten the scheduling project

95
00:03:31,760 --> 00:03:37,200
and which tasks might be involved

